# Build image
 FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env
WORKDIR /app
COPY ./BloodBowlLeagueBackend.sln ./

# Copy all the csproj files and restore to cache the layer for faster builds
# The dotnet_build.sh script does this anyway, so superfluous, but docker can
# cache the intermediate images so _much_ faster
COPY ./Races/Host.Races/Host.Races.csproj ./Races/Host.Races/Host.Races.csproj
COPY ./Races/Domain.Races/Domain.Races.csproj ./Races/Domain.Races/Domain.Races.csproj
COPY ./ServiceConfig/ServiceConfig.csproj ./ServiceConfig/ServiceConfig.csproj

RUN dotnet restore ./Races/Host.Races/Host.Races.csproj
RUN dotnet restore ./Races/Domain.Races/Domain.Races.csproj
RUN dotnet restore ./ServiceConfig/ServiceConfig.csproj

COPY ./Races ./Races
COPY ./ServiceConfig ./ServiceConfig
RUN dotnet build ./Races/Host.Races/Host.Races.csproj -c Release

RUN dotnet publish "./Races/Host.Races/Host.Races.csproj" -c Release -o "../../out"

#App image
FROM mcr.microsoft.com/dotnet/core/aspnet:2.2
WORKDIR /app
COPY --from=build-env /app/out .
CMD ["dotnet", "Host.Races.dll"]